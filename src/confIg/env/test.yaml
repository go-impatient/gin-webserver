core:
  enabled: true                   # enabale httpd server
  mode: "debug"                   # 开发模式, debug, release, test
  name: "apiserver"               # API Server的名字
  host: ""                        # ip address to bind (default: any)
  port: "9090"                    # HTTP 绑定端口.
  max_ping_count: 2               # pingServer函数try的次数
  jwt_secret: "Rtg8BPKNEf2mB4mgvKONGPZZQSaJWNLijxR42qRgq0iBb5"
  tls:
    port: "9098"
    cert_path: ""                 # src/config/server.crt
    key_path: ""                  # src/config/server.key
  auto_tls:
    enabled: false                # Automatically install TLS certificates from Let's Encrypt.
    folder: ".cache"              # folder for storing TLS certificates
    host: ""                      # which domains the Let's Encrypt will attempt

log:
  writers: "file,stdout"              # 输出位置，有两个可选项 —— file 和 stdout。选择 file 会将日志记录到 logger_file 指定的日志文件中，选择 stdout 会将日志输出到标准输出，当然也可以两者同时选择
  logger_level: "DEBUG"               # 日志级别，DEBUG、INFO、WARN、ERROR、FATAL
  logger_file: "log/apiserver.log"    # 日志文件
  log_format_text: false              # 日志的输出格式，JSON 或者 plaintext，true 会输出成 JSON 格式，false 会输出成非 JSON 格式
  rollingPolicy: "size"               # rotate 依据，可选的有 daily 和 size。如果选 daily 则根据天进行转存，如果是 size 则根据大小进行转存
  log_rotate_date: 1                  # rotate 转存时间，配 合rollingPolicy: daily 使用
  log_rotate_size: 1                  # rotate 转存大小，配合 rollingPolicy: size 使用
  log_backup_count: 7                 # 当日志文件达到转存标准时，log 系统会将该日志文件进行压缩备份，这里指定了备份文件的最大个数

db:
  name: "db_apiserver"
  addr: "127.0.0.1:3306"
  username: "root"
  password: "123456"

docker_db:
  name: "db_apiserver"
  addr: "127.0.0.1:3306"
  username: "root"
  password: "123456"